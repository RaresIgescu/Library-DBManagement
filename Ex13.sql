--13
--Pentru toti cititorii care au realizat imprumuturi, 
--biblioteca vrea sa le recomandate alte carti pe baza genurilor
--cartilor pe care deja le-au citit. Cartile vor avea un scor de popularitate
--si se vor recomanda primele 3 cele mai populare carti din fiecare gen. Scorul
--de popularitate este dat de numarul de imprumuturi pe care
--acea carte le are inregistrate in biblioteca. Cartile
--recomandate pentru fiecare cititor vor fi stocate mai apoi
--in tabelul carti_recomandate

--mai intai vom crea tabelul necesar pentru stocarea recomandarilor
create table carti_recomandate(
    id_recomandare number(3) generated by default as identity primary key,
    id_cititor number(3),
    id_carte number(3),
    titlu_carte varchar2(50),
    gen varchar2(50),
    popularitate number(3),
    data_recomandare date);
    
create or replace package exercitiul_13 as
    type recomandare is record (
        id_carte number(3),
        titlu varchar2(50),
        gen varchar2(50),
        popularitate number);
        
    type vector_de_recomandari is table of recomandare;
    type vector_de_genuri is table of varchar2(50);
    function calc_popularitate(id_carte_imprumutata number) return number;
    function genuri_imprumutate(v_id_cititor number) return vector_de_genuri;
    procedure de_recomandat(v_id_cititor number);
    procedure commit_to_database(v_id_cititor number, recomandari vector_de_recomandari);
end exercitiul_13;
/
    
create or replace package body exercitiul_13 as
    function calc_popularitate(id_carte_imprumutata number) return number is
        popularitate number;
    begin
        select count(*)
        into popularitate
        from imprumut 
        where id_carte = id_carte_imprumutata;
        return popularitate;
    end calc_popularitate;
    
    function genuri_imprumutate(v_id_cititor number) return vector_de_genuri is
        genuri vector_de_genuri := vector_de_genuri();
    begin
        select distinct ca.gen
        bulk collect into genuri
        from carte ca
        join imprumut i on i.id_carte = ca.id_carte
        where i.id_cititor = v_id_cititor;
        return genuri;
    end genuri_imprumutate;
    
    procedure commit_to_database(v_id_cititor number, recomandari vector_de_recomandari) is
    begin
        for i in 1..recomandari.count loop
            insert into carti_recomandate (id_cititor, id_carte, titlu_carte, gen, popularitate, data_recomandare)
            values (v_id_cititor, recomandari(i).id_carte, recomandari(i).titlu, recomandari(i).gen, recomandari(i).popularitate, sysdate);
        end loop;
    end commit_to_database;
    
    procedure de_recomandat(v_id_cititor number) is
        genuri vector_de_genuri;
        lista vector_de_recomandari := vector_de_recomandari();
        v_recomandare recomandare;
    begin
        genuri := genuri_imprumutate(v_id_cititor);
        for i in 1..genuri.count loop
            for carte in (select ca.id_carte, ca.titlu, ca.gen, calc_popularitate(ca.id_carte) as popularitate
                          from carte ca
                          where ca.gen = genuri(i)
                          order by popularitate desc
                          fetch first 3 rows only) loop
                v_recomandare.id_carte := carte.id_carte;
                v_recomandare.titlu := carte.titlu;
                v_recomandare.popularitate := carte.popularitate;
                v_recomandare.gen := carte.gen;
                lista.extend;
                lista(lista.count) := v_recomandare;
            end loop;
        end loop;
        commit_to_database(v_id_cititor, lista);
    end de_recomandat;
end exercitiul_13;
/

select *
from carti_recomandate
where id_cititor = 3;

begin
    exercitiul_13.de_recomandat(3);
end;
/
